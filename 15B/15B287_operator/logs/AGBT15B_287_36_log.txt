 
 
#######################################################
 SCRIPT NUMBER 1, project:AGBT15B_287_36 
 179088 128 OPERATOR 10 Amber Bonsall 2016-01-07 12:35:29 obs_aborted 
#######################################################
# test script to update catalog as you go...

########## CHANGE THESE ONLY #############
OnOffOnTime = 10 #minutes (change this to 12 to be in line with DSS scheduling)
obs_per_source = 3 #total observing time per source = OnOffOnTime * obs_per_source
h = Horizon(10.0) #minimum of 10 degrees elevation
myOff = Offset("J2000",1.0,0.0,cosv=True)  # Off position relative to source
doFirstPointing = True #Setting to False will skip the first pointing
doFirstCal = True  #Setting to False will skip the first 3C calibrator OnOff scan
peak_every = 12 #peak/cal every 12 OnOffOn (every 2.5 hours)
peak_near_source = False #Do another peak when changing to new source
#####################################

######### NOTES ###############
# This script runs in blocks of On-Off-On position switching with
# the two outer 'on' scans sharing one 'off'
# Total on-source time = 20 minutes
# Length of one 'On' or 'Off' = 3 minutes 20 seconds
# Length of one On-Off-On = 10 minutes
# 3 On-Off-On blocks are needed per source (30 minutes total per source)

###### Timing
# It takes 34m to completely observe 1 source+overhead (9 track scans)

execfile("/home/astro-util/projects/15B287_operator/15B287_config.py")
execfile("/home/astro-util/projects/15B287_operator/15B287_utils.py")
Catalog(fluxcal)
Catalog(lband_pointing)

scanTime = OnOffOnTime * 20.0 #seconds
tdelta = DateTime.TimeDelta(minutes=OnOffOnTime)
obs_count = 0
doCal = doFirstCal
doPointing = doFirstPointing
project_obs = 0
old_catalog_name = 'dummy'
fullcat = '/home/astro-util/projects/15B287_operator/15B287_operator.cat'

Configure(config_1)

while project_obs < 100:
    mycat,altcal = select_my_catalog()
    if mycat == old_catalog_name:
        print 'SAME CATALOG HAS BEEN SELECTED: Using FULL catalog'
        mycat = fullcat
        altcal = '3C309_1'
    old_catalog_name = mycat
    c = Catalog(mycat)
    sources = c.keys()
    for source in sources:
        doBalance = True
        newPeak = True
        calibrator = c[source]["calibrator"]
        n_obs = int(float(c[source]["n_obs"]))
        obs_left = obs_per_source-n_obs
        obs_ok = obs_left > 0
        t_now = Now()
        if t_now != None and obs_ok:
            source_rise = h.GetRise(source)
            source_set  = h.GetSet(source)
            if source_rise != None:
                if source_set != None:
                    t_ok = ((t_now + tdelta) < source_set)
                    t_ok = t_ok and (t_now >= source_rise)
                else:
                    t_ok = True
            else:
                t_ok = False
        else:
            t_ok = False

        source_ok = t_ok and obs_ok

        if source_ok:
            if doPointing == True:
                #check the calibrator is above the horizon
                if h.GetRise(calibrator)>t_now:
                    myCal = altcal #circumpolar alternative
                    print 'Calibrator %s is too low: Using %s' %(calibrator,altcal)
                else:
                    myCal = calibrator
                if obs_count == 0:
                    AutoPeakFocus(myCal)
                    #Break("Check Peak and Focus")
                else:
                    AutoPeak(myCal)
                Configure(config_1)
                doBalance = True
                doPointing = False

            if doCal:
                Slew(myCal)
                Balance()
                print 'Calibration scans (OnOff) :%s ' %(myCal)
                OnOff(myCal,myOff,120.0)
                doCal = False
                doBalance = True

            for i in range(obs_left):
                t_now = Now()   #check time ok again
                t_ok = False
                if t_now != None:
                    if source_rise != None:
                        if source_set != None:
                            t_ok = ((t_now + tdelta) < source_set)
                            t_ok = t_ok and (t_now >= source_rise)
                        else:
                            t_ok = True
                    else:
                        t_ok = False
                else:
                    t_ok = False

                if t_ok:
                    if peak_near_source and newPeak:
                        Slew(source)
                        AutoPeak()
                        Configure(config_1)
                        newPeak = False
                        doBalance = True
                    if doBalance:
                        Slew(source)
                        Balance()
                        doBalance = False

                    Comment("Starting on-source scan")
                    Track(source,None,scanTime)
                    Comment("Starting off-source scan")
                    Track(source,None,scanTime,fixedOffset=myOff)
                    Comment("Starting on-source scan")
                    Track(source,None,scanTime)
                    obs_count = obs_count + 1
                    obs_tot = obs_per_source+1-obs_left+i
                    print '%s: OBS COMPLETE = %s/%s' %(source,obs_tot,obs_per_source)
                    update_my_catalogs(source,obs_tot)

                    if obs_count % peak_every == 0:  #Cal/pointing interval
                        doCal = True
                        doPointing = True
        if source_ok and mycat == fullcat:
            break
    project_obs = project_obs+1

#######################################################
 LOG SESSION NUMBER 1 
[12:35:29] ******** Begin Scheduling Block
[12:35:29] ******** observer = OPERATOR, SB name = 15B287_operator, project ID = AGBT15B_287, date = 07 Jan 2016

[12:35:29] Configuring telescope.
[12:35:29]     Setting State: Activating
[12:35:33]     Setting State: Ready
[12:35:35]     Setting State: Activating
[12:35:36]     Setting State: Ready
[12:35:36] Default values are
[12:35:36] if3freq  =  [0, 0, 0]
[12:35:36] notchfilter  =  In
[12:35:36] polswitch  =  thru
[12:35:36] The bad devices are: 
[12:35:36] OpticalDriver5
[12:35:36] The bad devices are: 
[12:35:36] OpticalDriver5
[12:35:36] Waiting for the ConverterRack to finish activating
[12:35:36] . . . .
[12:35:36] Checking telescope
[12:35:36] Configuration Complete
[12:35:36] INFO: Selecting Catalog
[12:35:36] INFO: Using Catalog for LST 13-17
[12:35:37] Configuring telescope.
[12:35:37]     Setting State: Activating
[12:35:38]     Setting State: Ready
[12:35:38]     Setting State: Activating
[12:35:39]     Setting State: Ready
[12:35:39] Default values are
[12:35:39] if3freq  =  [0]
[12:35:39] notchfilter  =  In
[12:35:39] polswitch  =  thru
[12:35:39] The bad devices are: 
[12:35:39] OpticalDriver5

[12:35:39] Checking telescope
[12:35:39] Configuration Complete
[12:35:39] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:35:39] Slewing to source.
[12:35:40] In state Ready, waiting for state Activating
[12:35:40]     Setting State: Activating
[12:35:40] Detected state Activating
[12:35:40] In state Activating, waiting for state Ready
[12:36:39]     Setting State: Ready
[12:36:39] Detected state Ready
[12:36:39] Balancing IF system.
[12:36:39] Balancing IFRack
[12:36:40]     Setting State: Activating
[12:36:40]     Setting State: Ready
[12:36:42] the sampler values are:
[12:36:42] RF_power 1 : 1.074219
[12:36:42] RF_power 2 : 0.004882812
[12:36:42] RF_power 3 : 1.000977
[12:36:42] RF_power 4 : 0.01464844
[12:36:42] RF_power 5 : 0.02929688
[12:36:42] RF_power 6 : 3.041992
[12:36:42] RF_power 7 : 4.111328
[12:36:42] RF_power 8 : 0.02441406
[12:36:42] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:36:42] Peak: Subscan 1 of 4
[12:36:42] In state Ready, waiting for state Running
[12:36:42]     Setting State: Activating
[12:36:43]     Setting State: Aborting
[12:36:43] ygor.Telescope: WaitForRunning: Asking abort confirmation.
[12:36:43] 
[12:36:43] User queried: "Abort detected! Terminate block?" waiting for reply...
[12:36:50] User replied: "Yes".
[12:36:50]     Setting State: Ready
[12:36:51] Exiting scheduling block.
runSuccessful: False
[12:36:51] ******** End Scheduling Block
[12:36:51] ******** observer = OPERATOR, SB name = 15B287_operator, project ID = AGBT15B_287

how much log? 3009 id: 179088self.history: <gbt.turtle.database.History.History instance at 0x5534a70>self.history.connection: <gbt.turtle.database.TurtleConnection.TurtleConnection instance at 0x5534908>how much converted log? 3213 
#######################################################
 
 
#######################################################
 SCRIPT NUMBER 2, project:AGBT15B_287_36 
 179089 128 OPERATOR 10 Amber Bonsall 2016-01-07 12:39:09 obs_aborted 
#######################################################
from mx import DateTime
execfile("/home/astro-util/projects/15B287_operator/15B287_config.py")
Catalog(fluxcal)
Catalog(lband_pointing)

########## CHANGE THESE ONLY #############
OnOffOnTime = 18 #minutes (change this to 12 to be in line with DSS scheduling)
obs_per_source = 3 #total observing time per source = OnOffOnTime * obs_per_source
h = Horizon(10.0) #minimum of 10 degrees elevation
myOff = Offset("J2000",1.0,0.0,cosv=True)  # Off position relative to source
doFirstPointing = True #Setting to False will skip the first pointing
doFirstCal = True  #Setting to False will skip the first 3C calibrator OnOff scan
peak_every = 6 #peak/cal every 6 OnOffOn (every 2.5 hours) 12 if changed
peak_near_source = True #Do another peak when changing to new source
#####################################


######### NOTES ###############
# This script runs in blocks of On-Off-On position switching with
# the two outer 'on' scans sharing one 'off'
# Total on-source time = 42 minutes   (24 if changes)
# Length of one 'On' or 'Off' = 7 minutes   (4 minutes if changes)
# Length of one On-Off-On = 21 minutes (14 minutes on-source)    (12 min if changes)
# 3 On-Off-On blocks are needed per source (63 minutes altogether)  (36 minutes if changes)
# !!!! Please remember to update catalog after session is complete

###### Timing
# It takes 1h 8m to completely observe 1 source+overhead (9 track scans)

LST = GetLST()
if LST >= 5 and LST <= 9:
    altCal = "3C249_1"
elif LST > 9 and LST <= 13:
    altCal = "3C249_1"
elif LST > 13 and LST <= 17:
    altCal = "3C309_1"
elif LST > 17 or LST < 5: #and LST <= 21:   #21 nominally
    altCal = "3C309_1"
c = Catalog("/home/astro-util/projects/15B287_operator/15B287_operator.cat")

sources = c.keys()
scanTime = OnOffOnTime * 20.0 #seconds
tdelta = DateTime.TimeDelta(minutes=OnOffOnTime)
obs_count = 0
doCal = doFirstCal
doPointing = doFirstPointing

Configure(config_1)

for source in sources:
    #print source
    doBalance = True
    newPeak = True
    calibrator = c[source]["calibrator"]
    n_obs = int(float(c[source]["n_obs"]))
    obs_left = obs_per_source-n_obs

    obs_ok = obs_left > 0
    t_now = Now()
    if t_now != None and obs_ok:
        source_rise = h.GetRise(source)
        source_set  = h.GetSet(source)
        if source_rise != None:
            if source_set != None:
                t_ok = ((t_now + tdelta) < source_set)
                t_ok = t_ok and (t_now >= source_rise)
            else:
                t_ok = True
        else:
            t_ok = False
    else:
        t_ok = False

    source_ok = t_ok and obs_ok

    if source_ok:
        if doPointing == True:
            #check the calibrator is above the horizon
            if h.GetRise(calibrator)>t_now:
                myCal = altCal #circumpolar alternative
                print 'Calibrator %s is too low: Using %s' %(calibrator,altCal)
            else:
                myCal = calibrator
            if obs_count == 0:
                AutoPeakFocus(myCal)
                #Break("Check Peak and Focus")
            else:
                AutoPeak(myCal)
            Configure(config_1)
            doBalance = True
            doPointing = False

        if doCal:
            Slew(myCal)
            Balance()
            print 'Calibration scans (OnOff) :%s ' %(myCal)
            OnOff(myCal,myOff,120.0)
            doCal = False
            doBalance = True

        for i in range(obs_left):
            t_now = Now()   #check time ok again
            t_ok = False
            if t_now != None:
                if source_rise != None:
                    if source_set != None:
                        t_ok = ((t_now + tdelta) < source_set)
                        t_ok = t_ok and (t_now >= source_rise)
                    else:
                        t_ok = True
                else:
                    t_ok = False
            else:
                t_ok = False

            if t_ok:
                if peak_near_source and newPeak:
                    AutoPeak()
                    Configure(config_1)
                    newPeak = False
                    doBalance = True
                if doBalance:
                    Slew(source)
                    Balance()
                    doBalance = False

                Comment("Starting on-source scan")
                Track(source,None,scanTime)
                Comment("Starting off-source scan")
                Track(source,None,scanTime,fixedOffset=myOff)
                Comment("Starting on-source scan")
                Track(source,None,scanTime)
                obs_count = obs_count + 1
                obs_tot = obs_per_source+1-obs_left+i
                print '%s: OBS COMPLETE = %s/%s' %(source,obs_tot,obs_per_source)
                if obs_count % peak_every == 0:  #Cal/pointing interval
                    doCal = True
                    doPointing = True

#######################################################
 LOG SESSION NUMBER 2 
[12:39:09] ******** Begin Scheduling Block
[12:39:09] ******** observer = OPERATOR, SB name = 15B287_operator_backup, project ID = AGBT15B_287, date = 07 Jan 2016

[12:39:09] Configuring telescope.
[12:39:09]     Setting State: Activating
[12:39:11]     Setting State: Ready
[12:39:13]     Setting State: Activating
[12:39:14]     Setting State: Ready
[12:39:14] Default values are
[12:39:14] if3freq  =  [0, 0, 0]
[12:39:14] notchfilter  =  In
[12:39:14] polswitch  =  thru
[12:39:14] The bad devices are: 
[12:39:14] OpticalDriver5
[12:39:14] The bad devices are: 
[12:39:14] OpticalDriver5
[12:39:14] Waiting for the ConverterRack to finish activating
[12:39:14] . .
[12:39:14] Checking telescope
[12:39:14] Configuration Complete
[12:39:15] Configuring telescope.
[12:39:15]     Setting State: Activating
[12:39:16]     Setting State: Ready
[12:39:16]     Setting State: Activating
[12:39:17]     Setting State: Ready
[12:39:17] Default values are
[12:39:17] if3freq  =  [0]
[12:39:17] notchfilter  =  In
[12:39:17] polswitch  =  thru
[12:39:17] The bad devices are: 
[12:39:17] OpticalDriver5

[12:39:17] Checking telescope
[12:39:17] Configuration Complete
[12:39:17] source : 3C295
               F1 : 0.4
               F2 : 32.0
               S22235 : 0.95
               S1400 : 22.53
               angsize : 5.0
               location : J2000 @ (14:11:20.65, 52:12:09.14)
[12:39:17] Slewing to source.
[12:39:18] In state Ready, waiting for state Activating
[12:39:18]     Setting State: Activating
[12:39:18] Detected state Activating
[12:39:18] In state Activating, waiting for state Ready
[12:40:32]     Setting State: Aborting
[12:40:32] ygor.Telescope: WaitForReady: Asking abort confirmation.
[12:40:32] 
[12:40:32] User queried: "Abort detected! Terminate block?" waiting for reply...
[12:40:34] User replied: "Yes".
[12:40:34]     Setting State: Ready[12:40:34] Exiting scheduling block.

runSuccessful: False
[12:41:53] ******** End Scheduling Block
[12:41:53] ******** observer = OPERATOR, SB name = 15B287_operator_backup, project ID = AGBT15B_287

how much log? 2075 id: 179089self.history: <gbt.turtle.database.History.History instance at 0x5534a70>self.history.connection: <gbt.turtle.database.TurtleConnection.TurtleConnection instance at 0x5534908>how much converted log? 2279 
#######################################################
 
 
#######################################################
 SCRIPT NUMBER 3, project:AGBT15B_287_36 
 179090 128 OPERATOR 10 Amber Bonsall 2016-01-07 12:41:55 obs_aborted 
#######################################################
# test script to update catalog as you go...

########## CHANGE THESE ONLY #############
OnOffOnTime = 10 #minutes (change this to 12 to be in line with DSS scheduling)
obs_per_source = 3 #total observing time per source = OnOffOnTime * obs_per_source
h = Horizon(10.0) #minimum of 10 degrees elevation
myOff = Offset("J2000",1.0,0.0,cosv=True)  # Off position relative to source
doFirstPointing = True #Setting to False will skip the first pointing
doFirstCal = True  #Setting to False will skip the first 3C calibrator OnOff scan
peak_every = 12 #peak/cal every 12 OnOffOn (every 2.5 hours)
peak_near_source = False #Do another peak when changing to new source
#####################################

######### NOTES ###############
# This script runs in blocks of On-Off-On position switching with
# the two outer 'on' scans sharing one 'off'
# Total on-source time = 20 minutes
# Length of one 'On' or 'Off' = 3 minutes 20 seconds
# Length of one On-Off-On = 10 minutes
# 3 On-Off-On blocks are needed per source (30 minutes total per source)

###### Timing
# It takes 34m to completely observe 1 source+overhead (9 track scans)

execfile("/home/astro-util/projects/15B287_operator/15B287_config.py")
execfile("/home/astro-util/projects/15B287_operator/15B287_utils.py")
Catalog(fluxcal)
Catalog(lband_pointing)

scanTime = OnOffOnTime * 20.0 #seconds
tdelta = DateTime.TimeDelta(minutes=OnOffOnTime)
obs_count = 0
doCal = doFirstCal
doPointing = doFirstPointing
project_obs = 0
old_catalog_name = 'dummy'
fullcat = '/home/astro-util/projects/15B287_operator/15B287_operator.cat'

Configure(config_1)

while project_obs < 100:
    mycat,altcal = select_my_catalog()
    if mycat == old_catalog_name:
        print 'SAME CATALOG HAS BEEN SELECTED: Using FULL catalog'
        mycat = fullcat
        altcal = '3C309_1'
    old_catalog_name = mycat
    c = Catalog(mycat)
    sources = c.keys()
    for source in sources:
        doBalance = True
        newPeak = True
        calibrator = c[source]["calibrator"]
        n_obs = int(float(c[source]["n_obs"]))
        obs_left = obs_per_source-n_obs
        obs_ok = obs_left > 0
        t_now = Now()
        if t_now != None and obs_ok:
            source_rise = h.GetRise(source)
            source_set  = h.GetSet(source)
            if source_rise != None:
                if source_set != None:
                    t_ok = ((t_now + tdelta) < source_set)
                    t_ok = t_ok and (t_now >= source_rise)
                else:
                    t_ok = True
            else:
                t_ok = False
        else:
            t_ok = False

        source_ok = t_ok and obs_ok

        if source_ok:
            if doPointing == True:
                #check the calibrator is above the horizon
                if h.GetRise(calibrator)>t_now:
                    myCal = altcal #circumpolar alternative
                    print 'Calibrator %s is too low: Using %s' %(calibrator,altcal)
                else:
                    myCal = calibrator
                if obs_count == 0:
                    AutoPeakFocus(myCal)
                    #Break("Check Peak and Focus")
                else:
                    AutoPeak(myCal)
                Configure(config_1)
                doBalance = True
                doPointing = False

            if doCal:
                Slew(myCal)
                Balance()
                print 'Calibration scans (OnOff) :%s ' %(myCal)
                OnOff(myCal,myOff,120.0)
                doCal = False
                doBalance = True

            for i in range(obs_left):
                t_now = Now()   #check time ok again
                t_ok = False
                if t_now != None:
                    if source_rise != None:
                        if source_set != None:
                            t_ok = ((t_now + tdelta) < source_set)
                            t_ok = t_ok and (t_now >= source_rise)
                        else:
                            t_ok = True
                    else:
                        t_ok = False
                else:
                    t_ok = False

                if t_ok:
                    if peak_near_source and newPeak:
                        Slew(source)
                        AutoPeak()
                        Configure(config_1)
                        newPeak = False
                        doBalance = True
                    if doBalance:
                        Slew(source)
                        Balance()
                        doBalance = False

                    Comment("Starting on-source scan")
                    Track(source,None,scanTime)
                    Comment("Starting off-source scan")
                    Track(source,None,scanTime,fixedOffset=myOff)
                    Comment("Starting on-source scan")
                    Track(source,None,scanTime)
                    obs_count = obs_count + 1
                    obs_tot = obs_per_source+1-obs_left+i
                    print '%s: OBS COMPLETE = %s/%s' %(source,obs_tot,obs_per_source)
                    update_my_catalogs(source,obs_tot)

                    if obs_count % peak_every == 0:  #Cal/pointing interval
                        doCal = True
                        doPointing = True
        if source_ok and mycat == fullcat:
            break
    project_obs = project_obs+1

#######################################################
 LOG SESSION NUMBER 3 
[12:41:55] ******** Begin Scheduling Block
[12:41:55] ******** observer = OPERATOR, SB name = 15B287_operator, project ID = AGBT15B_287, date = 07 Jan 2016

[12:41:55] Configuring telescope.
[12:41:55]     Setting State: Activating
[12:41:57]     Setting State: Ready
[12:41:59]     Setting State: Activating
[12:42:00]     Setting State: Ready
[12:42:00] Default values are
[12:42:00] if3freq  =  [0, 0, 0]
[12:42:00] notchfilter  =  In
[12:42:00] polswitch  =  thru
[12:42:00] Error: Executing database query, trying again
[12:42:00] The bad devices are: 
[12:42:00] OpticalDriver5
[12:42:00] The bad devices are: 
[12:42:00] OpticalDriver5
[12:42:00] Waiting for the ConverterRack to finish activating
[12:42:00] . .
[12:42:00] Checking telescope
[12:42:00] Configuration Complete
[12:42:00] INFO: Selecting Catalog
[12:42:00] INFO: Using Catalog for LST 13-17
[12:42:01] Configuring telescope.
[12:42:01]     Setting State: Activating
[12:42:02]     Setting State: Ready
[12:42:02]     Setting State: Activating
[12:42:03]     Setting State: Ready
[12:42:03] Default values are
[12:42:03] if3freq  =  [0]
[12:42:03] notchfilter  =  In
[12:42:03] polswitch  =  thru
[12:42:03] Error: Executing database query, trying again
[12:42:03] The bad devices are: 
[12:42:03] OpticalDriver5

[12:42:03] Checking telescope
[12:42:03] Configuration Complete
[12:42:03] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:42:03] Slewing to source.
[12:42:04] In state Ready, waiting for state Activating
[12:42:04]     Setting State: Activating
[12:42:04] Detected state Activating
[12:42:04] In state Activating, waiting for state Ready
[12:43:20]     Setting State: Ready
[12:43:20] Detected state Ready
[12:43:20] Balancing IF system.
[12:43:20] Balancing IFRack
[12:43:20]     Setting State: Activating
[12:43:20]     Setting State: Ready
[12:43:22] the sampler values are:
[12:43:22] RF_power 1 : 1.05957
[12:43:22] RF_power 2 : 0.004882812
[12:43:22] RF_power 3 : 1.000977
[12:43:22] RF_power 4 : 0.01464844
[12:43:22] RF_power 5 : 0.02929688
[12:43:22] RF_power 6 : 3.00293
[12:43:22] RF_power 7 : 4.223633
[12:43:22] RF_power 8 : 0.02441406
[12:43:22] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:43:22] Peak: Subscan 1 of 4
[12:43:23] In state Ready, waiting for state Running
[12:43:23]     Setting State: Activating
[12:44:08]     Setting State: Committed
[12:44:10]     Setting State: Running
[12:44:10] Detected state Running
[12:44:10] *** Notice: This subscan will be numbered as scan #1 in your data reduction package.
[12:44:10] In state Running, waiting for state Ready
[12:44:39]     Setting State: Stopping
[12:44:54]     Setting State: Ready
[12:44:54] Detected state Ready
[12:44:54] Ygor Telescope: WaitForStopping
[12:44:54] Peak: Subscan 2 of 4
[12:44:54] In state Ready, waiting for state Running
[12:44:54]     Setting State: Activating
[12:45:10]     Setting State: Committed
[12:45:12]     Setting State: Running
[12:45:12] Detected state Running
[12:45:12] *** Notice: This subscan will be numbered as scan #2 in your data reduction package.
[12:45:12] In state Running, waiting for state Ready
[12:45:41]     Setting State: Stopping
[12:45:56]     Setting State: Ready
[12:45:56] Detected state Ready
[12:45:56] Ygor Telescope: WaitForStopping
[12:45:57] . . . . . . . . . . . . . . . . . 
[12:46:13] 
[12:46:13] User queried: "No corrections detected! Wait longer?" waiting for reply...
[12:46:21] User replied: "No".
[12:46:21] 
[12:46:21] User queried: "No corrections! Terminate block?" waiting for reply...
[12:46:23] User replied: "No".
[12:46:23] Peak: Subscan 3 of 4
[12:46:24] In state Ready, waiting for state Running
[12:46:24]     Setting State: Activating
[12:46:59]     Setting State: Committed
[12:47:01]     Setting State: Running
[12:47:01] Detected state Running
[12:47:01] *** Notice: This subscan will be numbered as scan #3 in your data reduction package.
[12:47:01] In state Running, waiting for state Ready
[12:47:30]     Setting State: Stopping
[12:47:36]     Setting State: Ready
[12:47:36] Detected state Ready
[12:47:36] Ygor Telescope: WaitForStopping
[12:47:36] Peak: Subscan 4 of 4
[12:47:36] In state Ready, waiting for state Running
[12:47:36]     Setting State: Activating
[12:47:44]     Setting State: Committed
[12:47:46]     Setting State: Running
[12:47:46] Detected state Running
[12:47:46] *** Notice: This subscan will be numbered as scan #4 in your data reduction package.
[12:47:46] In state Running, waiting for state Ready
[12:48:15]     Setting State: Stopping
[12:48:21]     Setting State: Ready
[12:48:21] Detected state Ready
[12:48:21] Ygor Telescope: WaitForStopping
[12:48:22] . . . . . . . . . . . . . . . . . 
[12:48:38] 
[12:48:38] User queried: "No corrections detected! Wait longer?" waiting for reply...
[12:48:43] User replied: "No".
[12:48:43] 
[12:48:43] User queried: "No corrections! Terminate block?" waiting for reply...
[12:48:44] User replied: "No".
[12:48:44] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:48:45] Focus: Subscan 1 of 1
[12:48:45] In state Ready, waiting for state Running
[12:48:45]     Setting State: Activating
[12:49:11]     Setting State: Committed
[12:49:13]     Setting State: Running
[12:49:13] Detected state Running
[12:49:13] *** Notice: This subscan will be numbered as scan #5 in your data reduction package.
[12:49:13] In state Running, waiting for state Ready
[12:50:13]     Setting State: Stopping
[12:50:15]     Setting State: Ready
[12:50:15] Detected state Ready
[12:50:15] Ygor Telescope: WaitForStopping
[12:50:16] . . . . . . . . . . . . . . . . . 
[12:50:32] 
[12:50:32] User queried: "No corrections detected! Wait longer?" waiting for reply...
[12:50:37] User replied: "No".
[12:50:37] 
[12:50:37] User queried: "No corrections! Terminate block?" waiting for reply...
[12:50:37] User replied: "No".
[12:50:38] Configuring telescope.
[12:50:38]     Setting State: Activating
[12:50:40]     Setting State: Ready
[12:50:41]     Setting State: Activating
[12:50:42]     Setting State: Ready
[12:50:42] Default values are
[12:50:42] if3freq  =  [0, 0, 0]
[12:50:42] notchfilter  =  In
[12:50:42] polswitch  =  thru
[12:50:42] The bad devices are: 
[12:50:42] OpticalDriver5
[12:50:42] The bad devices are: 
[12:50:42] OpticalDriver5
[12:50:42] Waiting for the ConverterRack to finish activating
[12:50:42] . .
[12:50:42] Checking telescope
[12:50:42] Configuration Complete
[12:50:42] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:50:43] Slewing to source.
[12:50:43] In state Ready, waiting for state Activating
[12:50:43]     Setting State: Activating
[12:50:43] Detected state Activating
[12:50:43] In state Activating, waiting for state Ready
[12:51:15]     Setting State: Ready
[12:51:15] Detected state Ready
[12:51:15] Balancing IF system.
[12:51:15] Balancing IFRack
[12:51:15]     Setting State: Activating
[12:51:15]     Setting State: Ready
[12:51:17] the sampler values are:
[12:51:17] RF_power 1 : 2.685547
[12:51:17] RF_power 2 : 0.004882812
[12:51:17] RF_power 3 : 3.007812
[12:51:17] RF_power 4 : 0.009765625
[12:51:17] RF_power 5 : 0.03417969
[12:51:17] RF_power 6 : 2.993164
[12:51:17] RF_power 7 : 2.900391
[12:51:17] RF_power 8 : 0.02929688
[12:51:17] Balancing VEGAS
[12:51:17]     Setting State: Activating
[12:51:17]     Setting State: Ready
[12:51:17]     Setting State: Activating
[12:51:17]     Setting State: Ready
[12:51:19]     Setting State: Activating
[12:51:20]     Setting State: Ready
[12:51:21]     Setting State: Activating
[12:51:22]     Setting State: Ready
[12:51:23]     Setting State: Activating
[12:51:24]     Setting State: Ready
[12:51:26]     Setting State: Activating
[12:51:26]     Setting State: Ready
[12:51:26] Calibration scans (OnOff) :3C286 
[12:51:26] source : 3C286
               F1 : 0.4
               F2 : 43.2
               S22235 : 2.55
               S1400 : 14.84
               angsize : 1.5
               location : J2000 @ (13:31:08.29, 30:30:32.96)
[12:51:26] OnOff: Subscan 1 of 2
[12:51:27] In state Ready, waiting for state Running
[12:51:27]     Setting State: Activating
[12:51:32]     Setting State: Committed
[12:51:34]     Setting State: Running
[12:51:34] Detected state Running
[12:51:34] *** Notice: This subscan will be numbered as scan #6 in your data reduction package.
[12:51:34] In state Running, waiting for state Ready
[12:53:33]     Setting State: Stopping
[12:53:36]     Setting State: Ready
[12:53:36] Detected state Ready
[12:53:36] Ygor Telescope: WaitForStopping
[12:53:36] OnOff: Subscan 2 of 2
[12:53:36] In state Ready, waiting for state Running
[12:53:36]     Setting State: Activating
[12:53:56]     Setting State: Committed
[12:53:58]     Setting State: Running
[12:53:58] Detected state Running
[12:53:58] *** Notice: This subscan will be numbered as scan #7 in your data reduction package.
[12:53:58] In state Running, waiting for state Ready
[12:55:57]     Setting State: Stopping
[12:56:00]     Setting State: Ready
[12:56:00] Detected state Ready
[12:56:00] Ygor Telescope: WaitForStopping
[12:56:00] source : UGC08778
               N_OBS : 0.0
               SESSION : 15.0
               location : J2000 @ (13:52:06.70, 38:04:01.30)
               CALIBRATOR : 3C286
               VEL : 3209.6
[12:56:00] Slewing to source.
[12:56:00] In state Ready, waiting for state Activating
[12:56:00]     Setting State: Activating
[12:56:00] Detected state Activating
[12:56:00] In state Activating, waiting for state Ready
[12:57:42]     Setting State: Ready
[12:57:42] Detected state Ready
[12:57:42] Balancing IF system.
[12:57:43] Balancing IFRack
[12:57:43]     Setting State: Activating
[12:57:43]     Setting State: Ready
[12:57:45] the sampler values are:
[12:57:45] RF_power 1 : 3.129883
[12:57:45] RF_power 2 : 0
[12:57:45] RF_power 3 : 2.744141
[12:57:45] RF_power 4 : 0.009765625
[12:57:45] RF_power 5 : 0.02929688
[12:57:45] RF_power 6 : 3.007812
[12:57:45] RF_power 7 : 2.827148
[12:57:45] RF_power 8 : 0.02441406
[12:57:45] Balancing VEGAS
[12:57:45]     Setting State: Activating
[12:57:45]     Setting State: Ready
[12:57:46]     Setting State: Activating
[12:57:46]     Setting State: Ready
[12:57:47] Starting on-source scan
[12:57:47] source : UGC08778
               N_OBS : 0.0
               SESSION : 15.0
               location : J2000 @ (13:52:06.70, 38:04:01.30)
               CALIBRATOR : 3C286
               VEL : 3209.6
[12:57:47] Track: Subscan 1 of 1
[12:57:47] In state Ready, waiting for state Running
[12:57:48]     Setting State: Activating
[12:57:53]     Setting State: Committed
[12:57:55]     Setting State: Running
[12:57:55] Detected state Running
[12:57:55] *** Notice: This subscan will be numbered as scan #8 in your data reduction package.
[12:57:55] In state Running, waiting for state Ready
[13:00:20]     Setting State: Aborting
[13:00:20] ygor.Telescope: WaitForRunning: Asking abort confirmation.
[13:00:20] 
[13:00:20] User queried: "Abort detected! Terminate block?" waiting for reply...
[13:00:21]     Setting State: Ready
[13:00:22] User replied: "Yes".
[13:00:22] Exiting scheduling block.
runSuccessful: False
[13:00:22] ******** End Scheduling Block
[13:00:22] ******** observer = OPERATOR, SB name = 15B287_operator, project ID = AGBT15B_287

how much log? 11909 id: 179090self.history: <gbt.turtle.database.History.History instance at 0x5534a70>self.history.connection: <gbt.turtle.database.TurtleConnection.TurtleConnection instance at 0x5534908>how much converted log? 12114 
#######################################################
