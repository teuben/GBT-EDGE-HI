 
 
#######################################################
 SCRIPT NUMBER 1, project:AGBT15B_287_02 
 177322 360 Daniel Perera 5 David Rose 2015-11-23 21:29:30 obs_aborted 
#######################################################
from mx import DateTime
execfile("/home/astro-util/projects/15B287_operator/15B287_config.py")
Catalog(fluxcal)
Catalog(lband_pointing)

########## CHANGE THESE ONLY #############
OnOffOnTime = 21 #minutes (change this to 12 to be in line with DSS scheduling)
obs_per_source = 3 #total observing time per source = OnOffOnTime * obs_per_source
h = Horizon(10.0) #minimum of 10 degrees elevation
myOff = Offset("J2000",1.0,0.0,cosv=True)  # Off position relative to source
doPointing = True #Setting to False will skip the first pointing
doCal = True  #Setting to False will skip the first 3C calibrator OnOff scan
peak_every = 6 #peak/cal every 6 OnOffOn (every 2.5 hours) 12 if changed
#####################################


######### NOTES ###############
# This script runs in blocks of On-Off-On position switching with
# the two outer 'on' scans sharing one 'off'
# Total on-source time = 42 minutes   (24 if changes)
# Length of one 'On' or 'Off' = 7 minutes   (4 minutes if changes)
# Length of one On-Off-On = 21 minutes (14 minutes on-source)    (12 min if changes)
# 3 On-Off-On blocks are needed per source (63 minutes altogether)  (36 minutes if changes)
# !!!! Please remember to update catalog after session is complete

###### Timing
# It takes 1h 8m to completely observe 1 source+overhead (9 track scans)

LST = GetLST()
if LST > 5 and LST <= 9:
    c = Catalog("/home/astro-util/projects/15B287_operator/15B287_LST_5_9.cat")
    Comment("Using Catalog for LST 5-9")
    altCal = "3C249_1"
elif LST > 9 and LST <= 13:
    c = Catalog("/home/astro-util/projects/15B287_operator/15B287_LST_9_13.cat")
    Comment("Using Catalog for LST 9-13")
    altCal = "3C249_1"
elif LST > 13 and LST <= 17:
    c = Catalog("/home/astro-util/projects/15B287_operator/15B287_LST_13_17.cat")
    Comment("Using Catalog for LST 13-17")
    altCal = "3C309_1"
elif LST > 17 and LST <= 21:
    c = Catalog("/home/astro-util/projects/15B287_operator/15B287_LST_17_21.cat")
    Comment("Using Catalog for LST 17-21")
    altCal = "3C309_1"
else:
    c = Catalog("/home/astro-util/projects/15B287_operator/15B287_operator.cat")
    altCal = "3C309_1"
    Comment("Using Full Catalog - WARNING!")
#    c = Catalog("//astro-util/projects/15B287/15B287.cat")

sources = c.keys()
scanTime = OnOffOnTime * 20.0 #seconds
tdelta = DateTime.TimeDelta(minutes=OnOffOnTime)
obs_count = 0

Configure(config_1)

for source in sources:
    #print source
    doBalance = True
    calibrator = c[source]["calibrator"]
    n_obs = int(float(c[source]["n_obs"]))
    obs_left = obs_per_source-n_obs

    obs_ok = obs_left > 0
    t_now = Now()
    if t_now != None and obs_ok:
        source_rise = h.GetRise(source)
        source_set  = h.GetSet(source)
        if source_rise != None:
            if source_set != None:
                t_ok = ((t_now + tdelta) < source_set)
                t_ok = t_ok and (t_now >= source_rise)
            else:
                t_ok = True
        else:
            t_ok = False
    else:
        t_ok = False

    source_ok = t_ok and obs_ok

    if source_ok:
        if doPointing == True:
            #check the calibrator is above the horizon
            if h.GetRise(calibrator)>t_now:
                myCal = altCal #circumpolar alternative
                print 'Calibrator %s is too low: Using %s' %(calibrator,altCal)
            else:
                myCal = calibrator
            if obs_count == 0:
                AutoPeakFocus(myCal)
                Break("Check Peak and Focus")
            else:
                AutoPeak(myCal)
            Configure(config_1)
            doBalance = True
            doPointing = False

        if doCal:
            Slew(myCal)
            Balance()
            print 'Calibration scans (OnOff): ' %(myCal)
            OnOff(myCal,myOff,120.0)
            doCal = False
            doBalance = True

        for i in range(obs_left):
            t_now = Now()   #check time ok again
            t_ok = False
            if t_now != None:
                if source_rise != None:
                    if source_set != None:
                        t_ok = ((t_now + tdelta) < source_set)
                        t_ok = t_ok and (t_now >= source_rise)
                    else:
                        t_ok = True
                else:
                    t_ok = False
            else:
                t_ok = False

            if t_ok:
                if doBalance:
                    Slew(source)
                    Balance()
                    doBalance = False
                Comment("Starting on-source scan")
                Track(source,None,scanTime)
                Comment("Starting off-source scan")
                Track(source,None,scanTime,fixedOffset=myOff)
                Comment("Starting on-source scan")
                Track(source,None,scanTime)
                obs_count = obs_count + 1
                obs_tot = obs_per_source+1-obs_left+i
                print '%s: COMPLETE OBS = %s/%s' %(source,obs_tot,obs_per_source)
                if obs_count % peak_every == 0:  #Cal/pointing interval
                    doCal = True
                    doPointing = True

#######################################################
 LOG SESSION NUMBER 1 
[21:29:30] ******** Begin Scheduling Block
[21:29:30] ******** observer = Daniel Perera, SB name = 15B287_operator, project ID = AGBT15B_287, date = 23 Nov 2015

[21:29:30] Using Catalog for LST 17-21
[21:29:30] Configuring telescope.
[21:29:30]     Setting State: Activating
[21:29:53]     Setting State: Ready
[21:29:55]     Setting State: Activating
[21:29:56]     Setting State: Ready
[21:29:56] Default values are
[21:29:56] if3freq  =  [0, 0, 0]
[21:29:56] notchfilter  =  In
[21:29:56] polswitch  =  thru
[21:29:56] The bad devices are: 
[21:29:56] OpticalDriver5
[21:29:56] The bad devices are: 
[21:29:56] OpticalDriver5
[21:29:56] WARNING: Frequencies adjusted to the local frame and velocities fall within the notch filter limits
[21:29:56] Frequency =  1345.0
[21:29:56] Frequency =  1345.0
[21:29:56] Frequency =  1345.0
[21:29:56] Frequency =  1345.0
[21:29:56] Waiting for the ConverterRack to finish activating
[21:29:56] . . . Waiting for the ScanCoordinator to finish activating
[21:29:56] . . . . . . . . . . . . . . . . . . . .
[21:29:56] Checking telescope
[21:29:56] Configuration Complete
[21:29:57] Configuring telescope.
[21:29:57]     Setting State: Activating
[21:29:58]     Setting State: Ready
[21:29:58]     Setting State: Activating
[21:29:59]     Setting State: Ready
[21:29:59] Default values are
[21:29:59] if3freq  =  [0]
[21:29:59] notchfilter  =  In
[21:29:59] polswitch  =  thru
[21:29:59] The bad devices are: 
[21:29:59] OpticalDriver5

[21:29:59] Checking telescope
[21:29:59] Configuration Complete
[21:29:59] source : 3C295
               F1 : 0.4
               F2 : 32.0
               S22235 : 0.95
               S1400 : 22.53
               angsize : 5.0
               location : J2000 @ (14:11:20.65, 52:12:09.14)
[21:29:59] Slewing to source.
[21:30:00] In state Activating, waiting for state Ready
[21:33:16]     Setting State: Ready
[21:33:16] Detected state Ready
[21:33:16] Balancing IF system.
[21:33:16] Balancing IFRack
[21:33:16]     Setting State: Activating
[21:33:17]     Setting State: Ready
[21:33:18] the sampler values are:
[21:33:18] RF_power 1 : 0.9619141
[21:33:18] RF_power 2 : 0.04882812
[21:33:18] RF_power 3 : 0.8886719
[21:33:18] RF_power 4 : 0.08300781
[21:33:18] RF_power 5 : 0.02929688
[21:33:18] RF_power 6 : 9.995117
[21:33:18] RF_power 7 : 8.208008
[21:33:18] RF_power 8 : 0.06347656
[21:33:18] source : 3C295
               F1 : 0.4
               F2 : 32.0
               S22235 : 0.95
               S1400 : 22.53
               angsize : 5.0
               location : J2000 @ (14:11:20.65, 52:12:09.14)
[21:33:18] Peak: Subscan 1 of 4
[21:33:18] In state Ready, waiting for state Running
[21:33:19]     Setting State: Activating
[21:33:39]     Setting State: Committed
[21:33:41]     Setting State: Running
[21:33:41] Detected state Running
[21:33:41] *** Notice: This subscan will be numbered as scan #1 in your data reduction package.
[21:33:41] In state Running, waiting for state Ready
[21:33:54]     Setting State: Aborting
[21:33:54] ygor.Telescope: WaitForRunning: Asking abort confirmation.
[21:33:54] 
[21:33:54] User queried: "Abort detected! Terminate block?" waiting for reply...
[21:33:55] User replied: "Yes".
[21:33:55]     Setting State: Ready
[21:33:56] Exiting scheduling block.
runSuccessful: False
[21:33:56] ******** End Scheduling Block
[21:33:56] ******** observer = Daniel Perera, SB name = 15B287_operator, project ID = AGBT15B_287

how much log? 3443 id: 177322self.history: <gbt.turtle.database.History.History instance at 0x5f36a70>self.history.connection: <gbt.turtle.database.TurtleConnection.TurtleConnection instance at 0x5f35758>how much converted log? 3647 
#######################################################
